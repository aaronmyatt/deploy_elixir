---
- name: update && upgrade
  apt:
    upgrade: yes

- name: install packages
  apt:
    name: ['python3-apt', 'nginx', 'htop', 'iftop', 'iotop', 'sysstat', 'screen', 'curl', 'ntp', 'build-essential', 'git', 'wget', 'libssl-dev', 'xz-utils']

- name: add erlang/elixir repos
  apt:
    deb: https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb

- name: update && upgrade
  apt:
    upgrade: yes
    update_cache: yes

- name: install erlang/elixir
  apt:
    name: ['esl-erlang', 'elixir']


- name: disable root login
  replace:
    path: /etc/ssh/sshd_config
    regexp: PermitRootLogin yes
    replace: PermitRootLogin no

- name: disallow password auth
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
  with_items:
    - {regex: 'PasswordAuthentication yes', line: 'PasswordAuthentication no'}
    - {regex: 'AllowUsers deploy', line: 'AllowUsers deploy'}

- name: create deploy user
  user:
    name: deploy
    comment: Deploy User
    uid: 1111
    create_home: true
    skeleton: /etc/skel
    home: /home/deploy
    shell: /bin/bash
    password: "{{ lookup('env', 'TECH_WEIGHTS_USER_PASSWORD') }}"

- name: make deploy user a sudoer
  lineinfile:
    path: /etc/sudoers
    line: "deploy    ALL=NOPASSWD: ALL"

- name: create .ssh dir/files
  file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    owner: deploy
    mode: "{{ item.mode }}"
  with_items:
    - {path: '/home/deploy/.ssh', state: 'directory', mode: '0700'}
    - {path: '/home/deploy/.ssh/authorized_keys', state: 'touch', mode: '0600'}

- name: copy ssh key to host machine
  authorized_key:
    user: deploy
    state: present
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: enable sysstat
  lineinfile:
    path: /etc/default/sysstat
    regexp: 'ENABLED="false"'
    line:  'ENABLED="true"'
